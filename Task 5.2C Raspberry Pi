import tkinter as tk
import RPi.GPIO as GPIO

# Setup for GPIO and PWM
GPIO.setmode(GPIO.BCM)

# Define LED pins
led_pins = [18, 23, 24]
pwm_instances = []

# Setup GPIO pins and initialize PWM for each LED
for pin in led_pins:
    GPIO.setup(pin, GPIO.OUT)
    pwm = GPIO.PWM(pin, 100)  # Set PWM frequency to 100Hz
    pwm.start(0)  # Start with LED off
    pwm_instances.append(pwm)

# Function to update the PWM duty cycle for each LED
def update_led_brightness(val, led_index):
    brightness = int(val)
    pwm_instances[led_index].ChangeDutyCycle(brightness)

# Create the GUI window
root = tk.Tk()
root.title("LED Brightness Control")
root.geometry("400x300")
root.configure(bg="lightblue")

# Slider Style Configuration
slider_style = {
    "from_": 0,
    "to": 100,
    "orient": "horizontal",
    "length": 300,
    "width": 20,
    "sliderlength": 20,
    "troughcolor": "#4CAF50",   # Trough color
    "bg": "lightblue",          # Background color of the window
    "fg": "#FF6347",            # Text color
    "highlightbackground": "#FFA07A",  # Border color
    "activebackground": "#FF4500",     # Color when interacting
    "label": "",               # Empty label (we'll add custom label separately)
    "font": ("Helvetica", 12, "bold")
}

# Create sliders for each LED
for i in range(3):
    label = tk.Label(root, text=f"LED {i+1} Brightness", bg="lightblue", fg="#FF6347", font=("Helvetica", 14, "bold"))
    label.pack(pady=10)
    slider = tk.Scale(root, command=lambda val, i=i: update_led_brightness(val, i), **slider_style)
    slider.pack(pady=10)

# Start the Tkinter event loop
root.mainloop()

# Cleanup GPIO on exit
for pwm in pwm_instances:
    pwm.stop()
GPIO.cleanup()
